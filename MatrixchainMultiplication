import java.util.Scanner;
class matrixchain{
   public static int matrixchainorder(int dims[])
    {
        int n = dims.length - 1; 
        int[][] dp = new int[n][n];
        for (int chainLength = 2; chainLength <= n; chainLength++) {
            for (int i = 0; i < n - chainLength + 1; i++) {
                int j = i + chainLength - 1;
                dp[i][j] = Integer.MAX_VALUE;
                for (int k = i; k < j; k++) {
                    int q = dp[i][k] + dp[k + 1][j] + dims[i] * dims[k + 1] * dims[j + 1];
                    if (q < dp[i][j]) {
                        dp[i][j] = q;  
                    }
                }
            }
        }
        return dp[0][n - 1];
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the number of matrices: ");
        int n = sc.nextInt();

        int[] dims = new int[n + 1];

        System.out.println("Enter the dimensions of matrices (p1, p2, ..., pn): ");
        for (int i = 0; i <= n; i++) {
            dims[i] = sc.nextInt();
        }
        int result = matrixchainorder(dims);

        System.out.println("Minimum number of scalar multiplications is: " + result);
        sc.close();
    }
}
